/*
 * Copyright (C) 2018 Touchlab, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    }
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'

repositories {
    mavenCentral()
}

group = GROUP
version = VERSION_NAME

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')

//                fromPreset(presets.macosX64, 'nativeCommon')

        fromPreset(presets.macosX64, 'macos')
        fromPreset(presets.iosX64, 'iosX64')
        fromPreset(presets.iosArm64, 'iosArm64')
        fromPreset(presets.iosArm32, 'iosArm32')
        fromPreset(presets.mingwX64, 'mingw')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        nativeCommonMain { }
        nativeCommonTest { }

        configure([iosX64Main, iosArm64Main, macosMain, iosArm32Main, mingwMain]) {
            dependsOn nativeCommonMain
        }

        configure([iosX64Test, iosArm64Test, macosTest, iosArm32Test, mingwTest]) {
            dependsOn nativeCommonTest
        }
    }
}

configurations {
    compileClasspath
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

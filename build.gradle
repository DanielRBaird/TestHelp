/*
 * Copyright (C) 2018 Touchlab, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.2.1"
    }
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'

repositories {
    mavenCentral()
}

group = GROUP
version = VERSION_NAME

kotlin {
    jvm()
    js {
        browser()
        nodejs()
    }
    macosX64()
    iosArm32()
    iosArm64()
    iosX64()
    watchosArm32()
    watchosArm64()
    watchosX86()
    watchosX64()
    tvosArm64()
    tvosX64()
    mingwX64()
    linuxX64()
    linuxArm32Hfp()
    linuxMips32()

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        //Disabling js till we sort out some testing
        jsMain {
            dependsOn commonMain
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependsOn commonTest
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }

        nativeCommonMain {
            dependsOn commonMain
        }
        nativeCommonTest {
            dependsOn commonTest
        }
        macosX64Main {
            dependsOn nativeCommonMain
        }
        iosArm32Main {
            dependsOn nativeCommonMain
        }
        iosArm64Main {
            dependsOn nativeCommonMain
        }
        iosX64Main {
            dependsOn nativeCommonMain
        }
        watchosArm32Main {
            dependsOn nativeCommonMain
        }
        watchosArm64Main {
            dependsOn nativeCommonMain
        }
        watchosX86Main {
            dependsOn nativeCommonMain
        }
        watchosX64Main {
            dependsOn nativeCommonMain
        }
        tvosArm64Main {
            dependsOn nativeCommonMain
        }
        tvosX64Main {
            dependsOn nativeCommonMain
        }
        mingwX64Main {
            dependsOn nativeCommonMain
        }
        linuxX64Main {
            dependsOn nativeCommonMain
        }
        linuxArm32HfpMain {
            dependsOn nativeCommonMain
        }
        linuxMips32Main {
            dependsOn nativeCommonMain
        }
    }
}

configurations {
    compileClasspath
}

apply from: "$rootDir/gradle/gradle-mvn-mpp-push.gradle"

allprojects {
    tasks.register('publishWindows') {
        if(project.tasks.findByName('publish')) {
            dependsOn 'publishMingwX64PublicationToMavenRepository'
        }
    }

    tasks.register('publishLinux') {
        if(project.tasks.findByName('publish')) {
            dependsOn 'publishLinuxMips32PublicationToMavenRepository'
        }
    }

    apply plugin: "org.jlleitschuh.gradle.ktlint"
    ktlint {
        version.set("0.37.2")
        enableExperimentalRules.set(true)
        verbose.set(true)
        filter {
            exclude { it.file.path.contains("build/") }
        }
    }

    afterEvaluate {
        tasks.named("check").configure {
            dependsOn(tasks.getByName("ktlintCheck"))
        }
    }
}

